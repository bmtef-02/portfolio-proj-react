[{"/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/index.js":"1","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/App.js":"2","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/reportWebVitals.js":"3","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/MainComponent.js":"4","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/redux/configureStore.js":"5","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/HeaderConditionalComponent.js":"6","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/SearchResultComponent.js":"7","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/FooterComponent.js":"8","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/CreateComponent.js":"9","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/redux/ActionCreators.js":"10","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/redux/projects.js":"11","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/redux/users.js":"12","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/HomeComponent.js":"13","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/SearchComponent.js":"14","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/ProjectComponent.js":"15","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/SearchBarComponent.js":"16","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/HeaderNoLoginComponent.js":"17","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/HeaderComponent.js":"18","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/SearchHomeComponentBJ.js":"19","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/JoinCreateComponent.js":"20","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/SearchFilterComponent.js":"21","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/LoadingComponent.js":"22","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/SearchHomeComponent.js":"23","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/redux/ActionTypes.js":"24","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/FeaturedProjectsComponent.js":"25","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/shared/baseUrl.js":"26","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/shared/projects.js":"27"},{"size":639,"mtime":1639614519255,"results":"28","hashOfConfig":"29"},{"size":487,"mtime":1639614519253,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1639614519255,"results":"31","hashOfConfig":"29"},{"size":3204,"mtime":1640900166632,"results":"32","hashOfConfig":"29"},{"size":490,"mtime":1639614519255,"results":"33","hashOfConfig":"29"},{"size":745,"mtime":1639614519254,"results":"34","hashOfConfig":"29"},{"size":4921,"mtime":1640893601438,"results":"35","hashOfConfig":"29"},{"size":1953,"mtime":1639614519254,"results":"36","hashOfConfig":"29"},{"size":34540,"mtime":1640930431584,"results":"37","hashOfConfig":"29"},{"size":4397,"mtime":1640907813178,"results":"38","hashOfConfig":"29"},{"size":736,"mtime":1639614519255,"results":"39","hashOfConfig":"29"},{"size":450,"mtime":1639614519255,"results":"40","hashOfConfig":"29"},{"size":1722,"mtime":1640893601437,"results":"41","hashOfConfig":"29"},{"size":3531,"mtime":1639614519254,"results":"42","hashOfConfig":"29"},{"size":6798,"mtime":1640930307760,"results":"43","hashOfConfig":"29"},{"size":2994,"mtime":1639614519254,"results":"44","hashOfConfig":"29"},{"size":6933,"mtime":1639616529633,"results":"45","hashOfConfig":"29"},{"size":3745,"mtime":1639614519254,"results":"46","hashOfConfig":"29"},{"size":3684,"mtime":1640893601438,"results":"47","hashOfConfig":"29"},{"size":2125,"mtime":1639616529633,"results":"48","hashOfConfig":"29"},{"size":4001,"mtime":1639614519255,"results":"49","hashOfConfig":"29"},{"size":245,"mtime":1639614519254,"results":"50","hashOfConfig":"29"},{"size":1985,"mtime":1639631859209,"results":"51","hashOfConfig":"29"},{"size":354,"mtime":1640821595727,"results":"52","hashOfConfig":"29"},{"size":2282,"mtime":1640376920566,"results":"53","hashOfConfig":"29"},{"size":48,"mtime":1639614519255,"results":"54","hashOfConfig":"29"},{"size":5005,"mtime":1639616529634,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c5qiq5",{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":4,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/index.js",[],"/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/App.js",[],"/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/reportWebVitals.js",[],"/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/MainComponent.js",["125","126","127","128","129"],"import React, { Component } from 'react';\nimport HeaderConditional from './HeaderConditionalComponent';\nimport Home from './HomeComponent';\nimport SearchResult from './SearchResultComponent';\nimport Project from './ProjectComponent';\nimport Search from './SearchComponent';\nimport Footer from './FooterComponent';\nimport Create from './CreateComponent';\n// import Create from './CreateComponentMUI';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\n// import { PROJECTS } from '../shared/projects';\n// import { USERS } from '../shared/users'\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\nimport { fetchProjects, fetchUsers, postProject, joinTeam } from '../redux/ActionCreators';\n\nconst mapStateToProps = state => {\n    return {\n        projects: state.projects,\n        users: state.users\n    };\n};\n\nconst mapDispatchToProps = {\n    fetchProjects: () => (fetchProjects()),\n    fetchUsers: () => (fetchUsers()),\n    postProject: (title, category, teamSize, description, languages, yearsOfExp, time, owner_id, team_id) => (postProject(title, category, teamSize, description, languages, yearsOfExp, time, owner_id, team_id)),\n};\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        // this.state = {\n        //     projects: PROJECTS,\n        //     users: USERS\n        // };\n    }\n\n    componentDidMount() {\n        this.props.fetchProjects();\n        this.props.fetchUsers();\n    }\n\n    render() {\n        const ProjectWithId = ({match}) => {\n            return(\n                <Project \n                project={this.props.projects.projects.filter(project => project.id === +match.params.projectId)[0]}\n                users={this.props.users.users}\n                isLoadingProjects={this.props.projects.isLoading}\n                isLoadingUsers={this.props.users.isLoading}\n                />\n                \n            )\n        }\n        return(\n            <React.Fragment>\n                <HeaderConditional />\n                <Switch>\n                    <Route exact path='/' render={() =>\n                            <Home \n                                projects={this.props.projects}\n                                projectsLoading={this.props.projects.isLoading}\n                            />\n                        } />\n                    <Route exact path='/home' render={() =>\n                            <Home \n                                projects={this.props.projects}\n                                projectsLoading={this.props.projects.isLoading}\n                            />\n                        } />\n                    <Route path='/search-results' render={() => <SearchResult projects={this.props.projects.projects} projectsLoading={this.props.projects.isLoading} />} />\n                    <Route path='/projects/:projectId' component={ProjectWithId} />\n                    <Route path='/create-a-project' render={() => <Create postProject={this.props.postProject} />} />\n                </Switch>\n                <Footer />\n            </React.Fragment>\n\n        \n        );\n\n\n\n    };\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/redux/configureStore.js",["130"],"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { Projects } from './projects';\nimport { Users } from './users';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            projects: Projects,\n            users: Users\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/HeaderConditionalComponent.js",[],"/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/SearchResultComponent.js",["131","132","133","134","135","136","137","138","139","140","141","142"],"import React, { Component, useState, useEffect } from 'react';\nimport SearchBar from './SearchBarComponent';\nimport SearchFilter from './SearchFilterComponent';\nimport { Card, CardImg, CardText, CardBody, CardDeck, Breadcrumb, BreadcrumbItem, CardTitle, Col, Row, Badge } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent'\n\n// This function returns each project and it's info as a Card\nfunction SearchResultItem({project}) {\n\n    let truncateDescription = \"\";\n\n    if (project.description.length > 150) {\n        truncateDescription = project.description.substring(0, 200) + \"...\";\n    } else {\n        truncateDescription = project.description;\n    }\n\n    return(\n        <Col>\n            <Link to={`/projects/${project.id}`}>\n                <div>\n                    <img\n                        src=\"/assets/images/placeholder-img.jpg\"\n                        className=\"featuredImg\"\n                    />\n                </div>\n                <div>\n                    <h5 className=\"featuredHeaderProj\">{project.title}</h5>\n                </div>\n                <div>\n                    <p>{truncateDescription}</p>\n                </div>\n                <Row className=\"featuredRowLang\">\n                    {project.languages.map(language => {\n                        return (\n                            <Col className=\"featuredColLang\" xs=\"auto\">\n                                <Badge pill>{language}</Badge>\n                            </Col>\n                        )\n                    })}\n                </Row>\n            </Link>\n        </Col>\n    );\n}\n\n// This function renders the SearcBar, SearchFilter, and project Cards component\nfunction SearchResult(props) {\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n      }, [])\n\n    const { search } = window.location;\n    const query = new URLSearchParams(search).get('s');\n    console.log('search query:' + query)\n    let cat = new URLSearchParams(search).get('c');\n    console.log('category dropdown: ' + cat)\n    const filterProjects = (projects, query, cat) => {\n        if (!query && (cat === 'none' || cat === null)) {\n            return projects;\n        }\n        else if (query && (cat === 'none' || cat === null)) {\n            return projects.filter((project) => {\n                console.log(project.title)\n                const projectTitle = project.title.toLowerCase();\n                const projectDescription = project.description.toLowerCase();\n                console.log('from projects array: ' + project.category)\n                return (projectTitle.includes(query) || projectDescription.includes(query)) \n            })\n        }\n        else if (!query) {\n            return projects.filter((project) => {\n                console.log(project.title)\n                const projectCategory = project.category.toLowerCase();\n                console.log('projectCategory variable: ' + projectCategory)\n                console.log('from projects array: ' + project.category)\n                return projectCategory.includes(cat);\n            })\n        }\n    \n        return projects.filter((project) => {\n            console.log(project.title)\n            const projectTitle = project.title.toLowerCase();\n            const projectDescription = project.description.toLowerCase();\n            const projectCategory = project.category.toLowerCase();\n            console.log('Project Title: ' + project.title)\n            console.log('Project Category: ' + project.category)\n            return projectCategory.includes(cat) && (projectTitle.includes(query) || projectDescription.includes(query)) \n        });\n    };\n\n    console.log(\"Here are the projects as props: \" + props.projects)\n    const filteredProjects = filterProjects(props.projects, query, cat);\n    console.log(filteredProjects)\n\n    // This function maps through the PROJECTS array and passes each object to SearchResultItem\n    const projects = filteredProjects.map(project => {\n        return (\n            <div key={project.id} className=\"col-xl-3 col-md-4 col-6\">\n                <SearchResultItem project={project} />\n            </div>\n        )\n    });\n\n    if(props.projectsLoading) {\n        return( \n        <>\n            <SearchBar class=\"remove-margin\" />\n            {/* <SearchFilter class=\"remove-margin\" /> */}\n            <Loading />\n        </>\n        )\n    }\n\n    if (filteredProjects.length < 1) {\n        return(\n            <>\n            <SearchBar />\n            <p>Oops! No projects match your search criteria. Try broadening your search.</p>\n            </>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            <div>\n                <SearchBar class=\"remove-margin\" />\n            </div>\n            <div className=\"row\" style={{backgroundColor: \"white\"}}>\n                {projects}\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default SearchResult","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/FooterComponent.js",["143","144","145","146","147","148","149"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl'\n\nfunction Footer(props) {\n    return(\n        <footer className=\"site-footer mt-4\">\n            <div className=\"container-fluid\">\n                <div className=\"row\">             \n                    <div className=\"col-sm-4 text-center\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to='/home'>Home</Link></li>\n                            <li><Link to='/directory'>Directory</Link></li>\n                            <li><Link to='/aboutus'>About</Link></li>\n                            <li><Link to='/contactus'>Contact</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-sm-4 text-center\">\n                        <h5>Social</h5>\n                        <a className=\"btn btn-social-icon btn-instagram\" href=\"http://instagram.com/\" target=\"_blank\"><i className=\"fa fa-instagram\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/\" target=\"_blank\"><i className=\"fa fa-facebook\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\" target=\"_blank\"><i className=\"fa fa-twitter\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\" target=\"_blank\"><i className=\"fa fa-youtube\" /></a> \n                    </div>\n                    <div className=\"col-sm-4 text-center mt-4 mt-sm-0\">\n                        <a className=\"brand\" href=\"#\">\n                            <img className=\"d-block mx-auto\" src={baseUrl + '/images/logoipsum-logo.svg'} height=\"30\" />\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/CreateComponent.js",["150","151","152","153","154","155","156","157","158","159","160","161","162","163"],"import React, { Component } from 'react';\nimport { Card, CardTitle, CardBody, CardText, Button, Form, FormGroup, Input, Label, Col, Row, FormFeedback, Tooltip } from 'reactstrap';\nimport { Link } from 'react-router-dom'\nimport { render } from 'react-dom';\nimport { Tabs, Tab, TabPanel, TabList} from 'react-web-tabs';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport \"react-web-tabs/dist/react-web-tabs.css\";\n\nclass Create extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: null,\n            category: null,\n            teamSize: null,\n            description: null,\n            languages: null, \n            yearsOfExp: null,\n            time: null,\n            languages_friendly: null,\n            tooltipOpen: false,\n            touched: {\n                title: false,\n                category: false,\n                teamSize: false,\n                description: false,\n                languages: false, \n                yearsOfExp: false,\n                time: false,\n            }\n\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSelectedMultiple = this.handleSelectedMultiple.bind(this);\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            tooltipOpen: !this.state.tooltipOpen\n        });\n    }\n\n    handleChange(event) {\n        console.log(event.target.name)\n        const value = event.target.value;\n        this.setState({\n          ...this.state,\n          [event.target.name]: value\n        });\n    }\n\n    handleSelectedMultiple = evt => {\n        const values = Array.from(evt.target.selectedOptions, option => option.value);\n        // Or this way\n       // const values = [...evt.target.selectedOptions].map(opt => opt.value)\n        console.log('values', values);\n        const languages_friendly = values.toString();\n        this.setState({languages: values, languages_friendly: languages_friendly});\n      };\n\n    handleSubmit(event) {\n        this.props.postProject(\n            this.state.title,\n            this.state.category,\n            this.state.teamSize,\n            this.state.description,\n            this.state.languages,\n            this.state.yearsOfExp,\n            this.state.time\n        );\n    \n        event.preventDefault();\n\n    }\n\n    validate(title, category, description, languages, teamSize, yearsOfExp, time) {\n        const errors = {\n            title: '',\n            category: '',\n            description: '',\n            languages: '',\n            teamSize: '',\n            yearsOfExp: '',\n            time: ''\n        };\n\n        if (this.state.touched.title) {\n            console.log(this.state.touched.title);\n            console.log(title)\n\n            if(title === null) {\n                console.log('validation error created: title is required');\n                errors.title = 'Name is required.'\n            } else if(title.length > 50) {\n                console.log('validation error created: title is too long');\n                errors.title = 'Name must be 50 characters or less'\n            }\n            \n        }\n        \n        if (this.state.touched.category) {\n            console.log(this.state.touched.category);\n            console.log(category)\n\n            if(category === null) {\n                console.log('validation error created: category is required');\n                errors.category = 'Select a category. If none of the categories apply, please select \"Other\".'\n            }\n            \n        }\n\n        if (this.state.touched.description) {\n            console.log(this.state.touched.description);\n            console.log(description)\n\n            if(description === null) {\n                console.log('validation error created: description is required');\n                errors.description = 'Description is required.'\n            }\n            \n        }\n\n        if (this.state.touched.languages) {\n            console.log(this.state.touched.languages);\n            console.log(languages)\n\n            if(languages === null) {\n                console.log('validation error created: languages is required');\n                errors.languages = 'At least one language selection is required.'\n            }\n            \n        }\n\n        if (this.state.touched.teamSize) {\n            console.log(this.state.touched.teamSize);\n            console.log(teamSize)\n\n            if(teamSize === null) {\n                console.log('validation error created: teamSize is required');\n                errors.teamSize = 'Choosing your team size is required.'\n            }\n            \n        }\n\n        if (this.state.touched.yearsOfExp) {\n            console.log(this.state.touched.yearsOfExp);\n            console.log(yearsOfExp)\n\n            if(yearsOfExp === null) {\n                console.log('validation error created: yearsOfExp is required');\n                errors.yearsOfExp = 'Years of experience is required'\n            }\n            \n        }\n\n        if (this.state.touched.time) {\n            console.log(this.state.touched.time);\n            console.log(time)\n\n            if(time === null) {\n                console.log('validation error created: time is required');\n                errors.time = 'Weekly time commitment is required.'\n            }\n            \n        }\n        console.log(\"these are all the errors from the validate function: \" + errors)\n        return errors;\n    }\n\n    handleBlur = (field) => () => {\n        this.setState({\n            touched: {...this.state.touched, [field]: true}\n        })\n    }\n\n    render() {\n\n        const errors = this.validate(this.state.title, this.state.category, this.state.description, this.state.languages, this.state.teamSize, this.state.yearsOfExp, this.state.time);\n        console.log(errors.title, errors.category, errors.description, errors.languages, errors.teamSize, errors.yearsOfExp, errors.time);\n\n        return(\n            <div>\n                <h1>What Are We Building?</h1>\n                <div className=\"container\">\n                    <Tabs defaultTab=\"vertical-tab-one\" vertical>\n                            <TabList>\n                                <Tab tabFor=\"vertical-tab-name\" className=\"tab-button\">\n                                    <Row>\n                                        <Col xs=\"9\">\n                                            <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i> Name\n                                        </Col> \n                                        <Col className=\"complete-icon\">\n                                            <i className={!this.state.title ? \"fa fa-circle-o\" : (!errors.title) ? \"fa fa-check-circle-o\" : \"fa fa-times-circle-o\"} aria-hidden=\"true\" style={!this.state.title ? {color: \"black\"} : (!errors.title) ? {color: \"green\"} : {color: \"red\"}}></i>\n                                        </Col>\n                                    </Row>\n                                </Tab>  \n                                <Tab tabFor=\"vertical-tab-category\" className=\"tab-button\">\n                                    <Row>\n                                        <Col xs=\"9\">\n                                            <i class=\"fa fa-th\" aria-hidden=\"true\"></i> Category\n                                        </Col> \n                                        <Col className=\"complete-icon\">\n                                            <i className={!this.state.category ? \"fa fa-circle-o\" : \"fa fa-check-circle-o\"} aria-hidden=\"true\" style={!this.state.category ? {color: \"black\"} : {color: \"green\"}}></i>\n                                        </Col>\n                                    </Row>\n                                </Tab>\n                                <Tab tabFor=\"vertical-tab-description\" className=\"tab-button\">\n                                    <Row>\n                                        <Col xs=\"9\">\n                                            <i class=\"fa fa-align-justify\" aria-hidden=\"true\"></i> Description\n                                        </Col> \n                                        <Col className=\"complete-icon\">\n                                            <i className={!this.state.description ? \"fa fa-circle-o\" : \"fa fa-check-circle-o\"} aria-hidden=\"true\" style={!this.state.description ? {color: \"black\"} : {color: \"green\"}}></i>\n                                        </Col>\n                                    </Row>\n                                </Tab>\n                                <Tab tabFor=\"vertical-tab-languages\" className=\"tab-button\">\n                                    <Row>\n                                        <Col xs=\"9\">\n                                            <i class=\"fa fa-code\" aria-hidden=\"true\"></i> Languages\n                                        </Col> \n                                        <Col className=\"complete-icon\">\n                                            <i className={!this.state.languages ? \"fa fa-circle-o\" : \"fa fa-check-circle-o\"} aria-hidden=\"true\" style={!this.state.languages ? {color: \"black\"} : {color: \"green\"}}></i>\n                                        </Col>\n                                    </Row>\n                                </Tab>\n                                <Tab tabFor=\"vertical-tab-teamSize\" className=\"tab-button\">\n                                    <Row>\n                                        <Col xs=\"9\">\n                                            <i class=\"fa fa-users\" aria-hidden=\"true\"></i> Team Size\n                                        </Col> \n                                        <Col className=\"complete-icon\">\n                                            <i className={!this.state.teamSize ? \"fa fa-circle-o\" : \"fa fa-check-circle-o\"} aria-hidden=\"true\" style={!this.state.teamSize ? {color: \"black\"} : {color: \"green\"}}></i>\n                                        </Col>\n                                    </Row> \n                                </Tab>\n                                <Tab tabFor=\"vertical-tab-experience\" className=\"tab-button\">\n                                    <Row>\n                                        <Col xs=\"9\">\n                                            <i class=\"fa fa-black-tie\" aria-hidden=\"true\"></i> Experience\n                                        </Col> \n                                        <Col className=\"complete-icon\">\n                                            <i className={!this.state.yearsOfExp ? \"fa fa-circle-o\" : \"fa fa-check-circle-o\"} aria-hidden=\"true\" style={!this.state.yearsOfExp ? {color: \"black\"} : {color: \"green\"}}></i>\n                                        </Col>\n                                    </Row> \n                                </Tab>\n                                <Tab tabFor=\"vertical-tab-time\" className=\"tab-button\">\n                                    <Row>\n                                        <Col xs=\"9\">\n                                            <i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> Weekly Time Commitment\n                                        </Col> \n                                        <Col className=\"complete-icon\">\n                                            <i className={!this.state.time ? \"fa fa-circle-o\" : \"fa fa-check-circle-o\"} aria-hidden=\"true\" style={!this.state.time ? {color: \"black\"} : {color: \"green\"}}></i>\n                                        </Col>\n                                    </Row> \n                                </Tab>\n                                <Tab tabFor=\"vertical-tab-submit\" className=\"tab-button\">\n                                    <Row>\n                                        <Col xs=\"9\">\n                                            <i class=\"fa fa-paper-plane\" aria-hidden=\"true\"></i> Review and Submit\n                                        </Col> \n                                        {/* <Col className=\"complete-icon\">\n                                            <i className={!this.state.title ? \"fa fa-circle-o\" : \"fa fa-check-circle-o\"} aria-hidden=\"true\" style={!this.state.title ? {color: \"black\"} : {color: \"green\"}}></i>\n                                        </Col> */}\n                                    </Row> \n                                </Tab>\n                            </TabList>\n                        <form onSubmit={this.handleSubmit}>\n                            <TabPanel tabId=\"vertical-tab-name\">\n                                <h2>Name</h2>\n                                <p>Use a short and simple name for your project. Don't worry you'll have more room to describe your project in the Description section.</p>\n                                <ul>\n                                    <li>Keep it simple and sweet</li>\n                                    <li>50 characters or less</li>\n                                </ul>\n                                <Input \n                                    type=\"text\" \n                                    name=\"title\" \n                                    id=\"title\" \n                                    onChange={this.handleChange}\n                                    onBlur={this.handleBlur('title')}\n                                    invalid={errors.title}\n                                />\n                                <FormFeedback>\n                                    {errors.title}\n                                </FormFeedback>\n                            </TabPanel>\n                            <TabPanel tabId=\"vertical-tab-category\">\n                                <h2>Category</h2>\n                                <p>What category does your project best fit into? If you can't find one that matches your project, choose \"Other\"</p>   \n                                <Input \n                                    type=\"select\" \n                                    name=\"category\" \n                                    id=\"category\" \n                                    onChange={this.handleChange}\n                                    onBlur={this.handleBlur('category')}\n                                    invalid={errors.category} \n                                >\n                                    <option hidden value=\"\">--</option>\n                                    <option value=\"Automation\">Automation</option>\n                                    <option value=\"Crypto\">Crypto</option>\n                                    <option value=\"Data\">Data</option>\n                                    <option value=\"Game\">Game</option>\n                                    <option value=\"Web Design\">Web Design</option>\n                                    <option value=\"Other\">Other</option>\n                                </Input>\n                                <FormFeedback>\n                                    {errors.category}\n                                </FormFeedback>\n                            </TabPanel>\n                            <TabPanel tabId=\"vertical-tab-description\">\n                                <h2>Description</h2>\n                                <p>Spill the beans on your master plan. Give a thorough explanation of what you're building and the help you need from your team. Spare no details!</p>\n                                <Input \n                                    type=\"textarea\" \n                                    name=\"description\" \n                                    id=\"description\" \n                                    rows={10}\n                                    onChange={this.handleChange}\n                                    onBlur={this.handleBlur('description')}\n                                    invalid={errors.description}\n                                />\n                                <FormFeedback>\n                                    {errors.description}\n                                </FormFeedback>\n                            </TabPanel>\n                            <TabPanel tabId=\"vertical-tab-languages\">\n                                <h2>Languages</h2>\n                                <p>Finely tune your team by picking the languages you're envisioning your project to be build with. Choose as many as you'd like.</p>\n                                <Input \n                                    type=\"select\" \n                                    name=\"languages\" \n                                    id=\"languages\" \n                                    onChange={this.handleSelectedMultiple} \n                                    multiple\n                                    onBlur={this.handleBlur('languages')}\n                                    invalid={errors.languages}\n                                >\n                                    <option value=\"HTML\">HTML</option>\n                                    <option value=\"CSS\">CSS</option>\n                                    <option value=\"JS\">JS</option>\n                                    <option value=\"Python\">Python</option>\n                                    <option value=\"C\">C</option>\n                                    <option value=\"C#\">C#</option>\n                                    <option value=\"C++\">C++</option>\n                                </Input>\n                                <FormFeedback>\n                                    {errors.languages}\n                                </FormFeedback>\n                            </TabPanel>\n                            <TabPanel tabId=\"vertical-tab-teamSize\">\n                                <h2>Team Size</h2>\n                                <p>This one's pretty simple. How many team members do you need?</p>\n                                <Input \n                                    type=\"select\" \n                                    name=\"teamSize\" \n                                    id=\"teamSize\" \n                                    onChange={this.handleChange} \n                                    onBlur={this.handleBlur('teamSize')}\n                                    invalid={errors.teamSize}\n                                >\n                                    <option hidden value=\"\">--</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                                    <option value=\"6\">6</option>     \n                                    <option value=\"7\">7</option>                                \n                                </Input>\n                                <FormFeedback>\n                                    {errors.teamSize}\n                                </FormFeedback>\n                            </TabPanel>\n                            <TabPanel tabId=\"vertical-tab-experience\">\n                                <h2>Experience</h2>\n                                <p>Some projects are harder than others. How many years of experience should your team members have?</p>\n                                <Input \n                                    type=\"select\" \n                                    name=\"yearsOfExp\" \n                                    id=\"yearsOfExp\" \n                                    onChange={this.handleChange}\n                                    onBlur={this.handleBlur('yearsOfExp')}\n                                    invalid={errors.yearsOfExp} \n                                >\n                                    <option hidden value=\"\">--</option>\n                                    <option value=\"&lt;1 year\">&lt;1 year</option>\n                                    <option value=\"1-3 years\">1-3 years</option>\n                                    <option value=\"3-5 years\">3-5 years</option>\n                                    <option value=\"5-10 years\">5-10 years</option>\n                                    <option value=\"10+ years\">10+ years</option>\n                                </Input>\n                                <FormFeedback>\n                                    {errors.yearsOfExp}\n                                </FormFeedback>\n                            </TabPanel>\n                            <TabPanel tabId=\"vertical-tab-time\">\n                                <h2>Weekly Time Commitment</h2>\n                                <p>Setting expectations on time commitment is important from the start. How many hours a week should your team be spending on your project?</p>\n                                <Input \n                                    type=\"select\" \n                                    name=\"time\" \n                                    id=\"time\" \n                                    onChange={this.handleChange}\n                                    onBlur={this.handleBlur('time')}\n                                    invalid={errors.time} \n                                >\n                                    <option hidden value=\"\">--</option>\n                                    <option value=\"5-10 hours\">5-10 hours</option>\n                                    <option value=\"10-20 hours\">10-20 hours</option>\n                                    <option value=\"20-40 hours\">20-40 hours</option>\n                                    <option value=\"40+ hours\">40+ hours</option>\n                                </Input>\n                                <FormFeedback>\n                                    {errors.time}\n                                </FormFeedback>\n                            </TabPanel>\n                            <TabPanel tabId=\"vertical-tab-submit\">\n                                <h2>Review and Submit</h2>\n                                <p>Final check. Does everything look right? You can always click back and edit. When you're ready, create your project.</p>\n                                <h4>Name</h4>\n                                <p>{this.state.title}</p>\n                                <p style={!errors.title ? {display: \"none\"} : {display: \"block\"}}>Error: {errors.title}</p>\n                                <h4>Category</h4>\n                                <p>{this.state.category}</p>\n                                <p style={!errors.category ? {display: \"none\"} : {display: \"block\"}}>Error: {errors.category}</p>\n                                <h4>Description</h4>\n                                <p>{this.state.description}</p>\n                                <p style={!errors.description ? {display: \"none\"} : {display: \"block\"}}>Error: {errors.description}</p>\n                                <h4>Languages</h4>\n                                <p>{this.state.languages_friendly}</p>\n                                <p style={!errors.languages ? {display: \"none\"} : {display: \"block\"}}>Error: {errors.languages}</p>\n                                <h4>Team Size</h4>\n                                <p>{this.state.teamSize}</p>\n                                <p style={!errors.teamSize ? {display: \"none\"} : {display: \"block\"}}>Error: {errors.teamSize}</p>\n                                <h4>Experience</h4>\n                                <p>{this.state.yearsOfExp}</p>\n                                <p style={!errors.yearsOfExp ? {display: \"none\"} : {display: \"block\"}}>Error: {errors.yearsOfExp}</p>\n                                <h4>Weekly Time Commitment</h4>\n                                <p>{this.state.time}</p>\n                                <p style={!errors.time ? {display: \"none\"} : {display: \"block\"}}>Error: {errors.time}</p>\n                                <Input type=\"submit\" id=\"form-submit\" value=\"Create my project\" />\n                                {/* <Tooltip placement=\"bottom\" isOpen={this.state.tooltipOpen} toggle={this.toggle} target=\"form-submit\">Project submission has errors. Please resolve before you can create your project.</Tooltip> */}\n                            </TabPanel>\n                        </form>\n                    </Tabs>\n                    \n                    \n\n                    {/* <Row>\n                        <Col>\n                            <Card>\n                                <CardBody> */}\n                                    {/* <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                                        <div ClassName=\"form-group row\">\n                                            <Label htmlFor=\"title\" sm={2}>Title</Label>\n                                            <Col sm={10}>\n                                                <Control.text model=\".title\"  name=\"title\" id=\"title\" placeholder=\"Give it a catchy name\" />\n                                            </Col>\n                                        </div>\n                                        <div ClassName=\"form-group row\">\n                                            <Label htmlFor=\"category\" sm={2}>Project Category</Label>\n                                            <Col sm={10}>\n                                                <Control.select name=\"category\" id=\"category\" model=\".category\" defaultValue=\"Automation\">\n                                                    <option value=\"Automation\">Automation</option>\n                                                    <option value=\"Crypto\">Crypto</option>\n                                                    <option value=\"Data\">Data</option>\n                                                    <option value=\"Game\">Game</option>\n                                                    <option value=\"Web Design\">Web Design</option>\n                                                    <option value=\"Other\">Other</option>\n                                                </Control.select>\n                                            </Col>\n                                            </div>\n                                        <div ClassName=\"form-group row\">\n                                            <Label htmlFor=\"teamSize\" sm={2}>Team Size</Label>\n                                                <Col sm={10}>\n                                                    <Control.text type=\"number\" model=\".teamSize\" />\n                                                </Col> \n                                        </div>\n                                        <div ClassName=\"form-group row\">\n                                            <Label htmlFor=\"description\" sm={2}>Details</Label>\n                                                <Col sm={10}>\n                                                    <Control.text model=\".description\" name=\"description\" id=\"description\" rows=\"6\" placeholder=\"Tell us about your project\"/>\n                                                </Col> \n                                        </div>\n                                        <div ClassName=\"form-group row\">\n                                            <Label htmlFor=\"languages\" sm={2}>Languages</Label>\n                                            <Col sm={10}>\n                                                <Control.select model=\".languages\" name=\"languages\" id=\"languages\" defaultValue=\"HTML\">\n                                                    <option value=\"HTML\">HTML</option>\n                                                    <option value=\"CSS\">CSS</option>\n                                                    <option value=\"JS\">JS</option>\n                                                    <option value=\"Python\">Python</option>\n                                                    <option value=\"C\">C</option>\n                                                    <option value=\"C#\">C#</option>\n                                                    <option value=\"C++\">C++</option>\n                                                </Control.select>\n                                            </Col>\n                                        </div>\n                                        <div ClassName=\"form-group row\">\n                                            <Label htmlFor=\"yearsOfExp\" sm={2}>Years of Exp</Label>\n                                            <Col sm={10}>\n                                                <Control.select model=\".yearsOfExp\" name=\"yearsOfExp\" id=\"yearsOfExp\" defaultValue=\"&lt;1 year\">\n                                                    <option value=\"&lt;1 year\">&lt;1 year</option>\n                                                    <option value=\"1-3 years\">1-3 years</option>\n                                                    <option value=\"3-5 years\">3-5 years</option>\n                                                    <option value=\"5-10 years\">5-10 years</option>\n                                                    <option value=\"10+ years\">10+ years</option>\n                                                </Control.select>\n                                            </Col>\n                                        </div>\n                                        <div ClassName=\"form-group row\">\n                                        <Label htmlFor=\"time\" sm={2}>Weekly Time Commit</Label>\n                                            <Col sm={10}>\n                                                <Control.select name=\"time\" id=\"time\" model=\".time\" defaultValue=\"&lt;5 hours\">\n                                                    <option value=\"&lt;5 hours\">&lt;5 hours</option>\n                                                    <option value=\"5-10 hours\">5-10 hours</option>\n                                                    <option value=\"10-20 hours\">10-20 hours</option>\n                                                    <option value=\"20-40 hours\">20-40 hours</option>\n                                                    <option value=\"40+ hours\">40+ hours</option>\n                                                </Control.select>\n                                            </Col>\n                                        </div>\n                                        <div ClassName=\"form-group row\">\n                                            <Button type=\"Submit\">Create</Button>\n                                        </div>\n                                    </LocalForm> */}\n                                    {/* <form onSubmit={this.handleSubmit}>\n                                        <Label for=\"title\">Project Title</Label>\n                                        <Input type=\"text\" name=\"title\" id=\"title\" onChange={this.handleChange}/>\n                                        <Label for=\"category\">Project Category</Label>\n                                        <Input type=\"select\" name=\"category\" id=\"category\" onChange={this.handleChange} >\n                                                <option hidden value=\"\">--</option>\n                                                <option value=\"Automation\">Automation</option>\n                                                <option value=\"Crypto\">Crypto</option>\n                                                <option value=\"Data\">Data</option>\n                                                <option value=\"Game\">Game</option>\n                                                <option value=\"Web Design\">Web Design</option>\n                                                <option value=\"Other\">Other</option>\n                                        </Input>\n                                        <Label for=\"description\">Project Description</Label>\n                                        <Input type=\"textarea\" name=\"description\" id=\"description\" onChange={this.handleChange}/>\n                                        <Label for=\"languages\">Languages Needed</Label>\n                                        <Input type=\"select\" name=\"languages\" id=\"languages\" onChange={this.handleSelectedMultiple} multiple>\n                                                <option value=\"HTML\">HTML</option>\n                                                <option value=\"CSS\">CSS</option>\n                                                <option value=\"JS\">JS</option>\n                                                <option value=\"Python\">Python</option>\n                                                <option value=\"C\">C</option>\n                                                <option value=\"C#\">C#</option>\n                                                <option value=\"C++\">C++</option>\n                                        </Input>\n                                        <Label for=\"teamSize\">Team Members Needed</Label>\n                                        <Input type=\"number\" name=\"teamSize\" id=\"teamSize\" onChange={this.handleChange}/>\n                                        <Label for=\"yearsOfExp\">Years of Experience</Label>\n                                        <Input type=\"select\" name=\"yearsOfExp\" id=\"yearsOfExp\" onChange={this.handleChange} >\n                                            <option hidden value=\"\">--</option>\n                                            <option value=\"&lt;1 year\">&lt;1 year</option>\n                                            <option value=\"1-3 years\">1-3 years</option>\n                                            <option value=\"3-5 years\">3-5 years</option>\n                                            <option value=\"5-10 years\">5-10 years</option>\n                                            <option value=\"10+ years\">10+ years</option>\n                                        </Input>\n                                        <Label for=\"time\">Weekly Time Commitment</Label>\n                                        <Input type=\"select\" name=\"time\" id=\"time\" onChange={this.handleChange} >\n                                            <option hidden value=\"\">--</option>\n                                            <option value=\"5-10 hours\">5-10 hours</option>\n                                            <option value=\"10-20 hours\">10-20 hours</option>\n                                            <option value=\"20-40 hours\">20-40 hours</option>\n                                            <option value=\"40+ hours\">40+ hours</option>\n                                        </Input>\n                                        <Input type=\"submit\" value=\"Submit\" />\n                                    </form> */}\n                                {/* </CardBody>\n                            </Card>\n                        </Col>\n                    </Row> */}\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default Create","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/redux/ActionCreators.js",[],"/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/redux/projects.js",[],"/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/redux/users.js",[],"/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/HomeComponent.js",["164","165","166","167","168","169","170","171","172"],"import React, { Component } from 'react';\nimport { Jumbotron, Container, Row, Col,\n    Button } from 'reactstrap';\nimport SearchHome from './SearchHomeComponent';\n// import SearchBar from './SearchBarComponent';\n// import SearchFilter from './SearchFilterComponent';\nimport { Switch, Route, Redirect, withRouter, NavLink } from 'react-router-dom';\nimport JoinCreate from './JoinCreateComponent';\nimport FeaturedProjects from './FeaturedProjectsComponent';\nimport SearchHomeBJ from './SearchHomeComponentBJ';\nimport { Loading } from '../components/LoadingComponent'\nimport { baseUrl } from '../shared/baseUrl';\n    \nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0,0);\n    }\n\n    render() {\n\n        const breakpoint = \"\\u003C\\u002F\\u003E\"\n\n        return(\n            <React.Fragment>\n                <Container className=\"jumboContainer\" fluid>\n                    <Row className=\"jumboRow\">\n                        <Col xs=\"4\">\n                            <h1 className=\"jumboHeader1\">Ready to Collaborate?</h1>\n                            <h2 className=\"jumboHeader2\">Good.</h2>\n                        </Col>\n                        <Col className=\"jumboCol\">\n                            <Button color=\"primary\">Get Started</Button>\n                        </Col>\n                    </Row>\n                    <Row className=\"breakpoint\">\n                        <h1>{breakpoint}</h1>\n                    </Row>\n                </Container>\n                <JoinCreate />\n                <SearchHomeBJ />\n                <FeaturedProjects />\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withRouter(Home);\n    ","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/SearchComponent.js",["173"],"// OLD CODE!!!!!!!\n\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Input, Label, Col } from 'reactstrap';\nimport { Link } from 'react-router-dom'\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n\n        return(\n            <div>\n                <Form>\n                    <FormGroup row>\n                        <Col md={8}>\n                            <Input type=\"text\" className=\"form-control\" placeholder=\"Search\" />     \n                        </Col>\n                        <Col>\n                            <Link to=\"/search-results\"><Button className=\"btn btn-primary\">Search</Button></Link>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Col>\n                            <Label htmlFor=\"projCategory\">Project Category</Label>\n                            <Input type=\"select\" name=\"projCategory\" id=\"projCategory\">\n                                <option value=\"Automation\">Automation</option>\n                                <option value=\"Crypto\">Crypto</option>\n                                <option value=\"Data\">Data</option>\n                                <option value=\"Game\">Game</option>\n                                <option value=\"Web Design\">Web Design</option>\n                                <option value=\"Other\">Other</option>\n                            </Input>\n                        </Col>\n                        <Col>\n                            <Label htmlFor=\"languages\">Languages</Label>\n                            <Input type=\"select\" name=\"languages\" id=\"languages\" multiple>\n                                <option value=\"1\">HTML</option>\n                                <option value=\"2\">CSS</option>\n                                <option value=\"3\">JS</option>\n                                <option value=\"4\">Python</option>\n                                <option value=\"5\">C</option>\n                                <option value=\"6\">C#</option>\n                                <option value=\"6\">C++</option>\n                            </Input>\n                        </Col>\n                        <Col>\n                            <Label htmlFor=\"yearsOfExp\">Years of Exp</Label>\n                            <Input type=\"select\" name=\"yearsOfExp\" id=\"yearsOfExp\">\n                                <option value=\"1\">&lt;1 year</option>\n                                <option value=\"2\">1-3 years</option>\n                                <option value=\"3\">3-5 years</option>\n                                <option value=\"4\">5-10 years</option>\n                                <option value=\"5\">10+ years</option>\n                            </Input>\n                        </Col>\n                        <Col>\n                            <Label htmlFor=\"timeCommit\">Weekly Time Commit</Label>\n                            <Input type=\"select\" name=\"timeCommit\" id=\"timeCommit\">\n                                <option value=\"1\">&lt;5 hours</option>\n                                <option value=\"2\">5-10 hours</option>\n                                <option value=\"3\">10-20 hours</option>\n                                <option value=\"4\">20-40 hours</option>\n                                <option value=\"5\">40+ hours</option>\n                            </Input>\n                        </Col>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    };\n}\n\nexport default Search;","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/ProjectComponent.js",["174","175","176","177","178","179","180"],"import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, CardTitle } from 'reactstrap';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Loading } from '../components/LoadingComponent';\nimport { joinTeam } from '../redux/ActionCreators';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nconst mapDispatchToProps = {\n    joinTeam: (projectId, userId) => (joinTeam(projectId, userId))\n}\n\nclass Project extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n    }\n\n    render() { \n        if(this.props.isLoadingProjects || this.props.isLoadingUsers ) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            )\n        }\n        const owner = this.props.users.filter(user=>this.props.project.owner_id === user.id)[0];\n        const team_ids = this.props.project.team_id\n        const team = [];\n            for (let i=0; i<team_ids.length; i++) {\n                for (let j=0; j<this.props.users.length; j++) {\n                    if (team_ids[i] === this.props.users[j].id) {\n                        team.push(this.props.users[j]);\n                    } \n                }\n            }\n        const open_spots = this.props.project.teamSize - team.length;\n        const unoccupied = [];\n            if (open_spots > 0) {\n                for (let i=0; i < open_spots; i++) {\n                    unoccupied.push('Open');\n                }\n        }\n        \n        return(\n            <div>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8\">\n                            <h2>{this.props.project.title}</h2>\n                            <Card>\n                                <CardBody>\n                                    <CardText>\n                                        {this.props.project.description}\n                                    </CardText>\n                                </CardBody>\n                            </Card>\n                            <Card className=\"mt-3\">\n                                <CardBody>\n                                    <CardTitle>Languages</CardTitle>\n                                    <CardText>\n                                        <ul className=\"list-group list-group-flush\">\n                                            <Languages lang={this.props.project.languages} />\n                                        </ul>\n                                    </CardText>\n                                </CardBody>\n                            </Card>\n                            <Card className=\"mt-3\">\n                                <CardBody>\n                                    <CardTitle>Years of Experience</CardTitle>\n                                    <CardText>\n                                        {this.props.project.yearsOfExp}\n                                    </CardText>\n                                </CardBody>\n                            </Card>\n                            <Card className=\"mt-3\">\n                                <CardBody>\n                                    <CardTitle>Weekly Time Commitment</CardTitle>\n                                    <CardText>\n                                        {this.props.project.time}\n                                    </CardText>\n                                </CardBody>\n                            </Card>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <Card className=\"shadow-sm text-center mt-md-5\">\n                                <CardBody>\n                                        <h3>Project Owner</h3>\n                                        <img src={baseUrl + owner.user_img} class=\"img-fluid rounded-circle\" width=\"200\" alt=\"Project-Owner\" />\n                                        <h5 class=\"mt-3 card-title\">{owner.name}</h5>\n                                        <a href=\"#\" class=\"text-decoration-none\">@{owner.username}</a>\n                                </CardBody>\n                                \n                            </Card>\n                            <Card className=\"shadow-sm text-left mt-2\">\n                                <h3 className=\"text-center\">Project Team (Spots: {this.props.project.teamSize})</h3>\n                                <ul class=\"list-group list-group-flush\">\n                                    <ProjectTeam team={team} />\n                                    <Open unoccupied={unoccupied} project_id={this.props.project.id} joinTeam={this.props.joinTeam} team={this.props.project.team_id}/>\n                                </ul>\n                            </Card>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nfunction ProjectTeam({team}) {\n    const group = team.map(team => {\n        return (\n            <div>\n                <li class=\"list-group-item\">\n                    <div class=\"d-inline align-middle project-member\">\n                        <a href=\"#\" class=\"text-decoration-none\">\n                            <img src={baseUrl + team.user_img} width=\"30\" class=\"img-fluid rounded-circle\" alt=\"\" />\n                            <span class=\"d-inline ml-1\">{team.name}</span>\n                        </a>\n                    </div>\n                </li>\n            </div>\n        )\n    })\n        return (\n            <div>\n                {group}\n            </div>\n    )\n}\n\nfunction Open({unoccupied, project_id, joinTeam, team}) {\n    console.log('Team passed into Open from props: ' + team);\n    const testClick = () => {\n        if(team.includes(2)) {\n            console.log('User already exists in team');\n            alert('You are already on this team!');\n        } else {\n            team.push(2);\n            console.log(team);\n            joinTeam(project_id, team);\n        }\n    \n    }\n\n    const op = unoccupied.map(() =>\n        <li class=\"list-group-item\">\n            <div class=\"d-inline align-middle project-member\">\n                <button onClick={testClick} class=\"btn btn-success ml-2\">Join Team</button>\n            </div>\n        </li>\n);\n\n        return (\n            <div>\n                {op}\n            </div>\n        )\n}\n\nfunction Languages({lang}) {\n    const la = lang.map((lang) =>\n        <li className=\"list-group-item\">{lang}</li>\n);\n\n    return (\n        <div>\n            {la}\n        </div>\n    )\n}\n\n\nexport default withRouter(connect(null, mapDispatchToProps)(Project));","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/SearchBarComponent.js",["181","182","183"],"import React, { Component } from 'react';\nimport { Button, Input, \n    Container, Row, Col, Form, Label } from 'reactstrap';\nimport { Link, useHistory } from 'react-router-dom'\n\n\nclass SearchBar extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        // const SearchBar = ({ searchQuery, setSearchQuery}) => {\n        //     const history = useHistory();\n        //     const onSubmit = e => {\n        //         history.push(`?s=${searchQuery}`)\n        //         e.preventDefault()\n        //     }\n        // };\n\n        return(\n            <Container className={this.props.class}>\n                <Form action=\"/search-results\" method=\"get\">\n                    <Row className=\"mb-2\">\n                        <Col xs={this.props.colSpan}>\n                            <Input \n                                type=\"text\" \n                                placeholder=\"Search\" \n                                id=\"project-search\" \n                                name=\"s\"/>     \n                        </Col>\n                        <Col>\n                            <Button type=\"submit\" className=\"btn btn-primary\">Search</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                        <Label htmlFor=\"category\">Category</Label>\n                            <Input \n                                type=\"select\" \n                                name=\"c\" \n                                id=\"projCategory\">\n                                <option value=\"none\">None</option>\n                                <option value=\"automation\">Automation</option>\n                                <option value=\"crypto\">Crypto</option>\n                                <option value=\"data\">Data</option>\n                                <option value=\"game\">Game</option>\n                                <option value=\"web design\">Web Design</option>\n                                <option value=\"other\">Other</option>\n                            </Input>\n                        </Col>\n                        <Col className=\"mb-4\">\n                                <Label htmlFor=\"languages\">Languages</Label>\n                                <Input type=\"select\" name=\"l\" id=\"languages\" multiple>\n                                    <option value=\"1\">HTML</option>\n                                    <option value=\"2\">CSS</option>\n                                    <option value=\"3\">JS</option>\n                                    <option value=\"4\">Python</option>\n                                    <option value=\"5\">C</option>\n                                    <option value=\"6\">C#</option>\n                                    <option value=\"6\">C++</option>\n                                </Input>\n                        </Col>\n                    </Row>\n                    \n                </Form>\n            </Container>\n        );\n    }\n}\n\nexport default SearchBar;","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/HeaderNoLoginComponent.js",["184","185","186"],"import React, { Component } from 'react';\nimport { Nav, NavbarToggler, Collapse, Navbar, NavItem, NavbarBrand, \n    Button, Label, Row,\n    Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { NavLink } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\n\nclass HeaderNoLogin extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false,\n\n            // these props correspond to the login modal inputs\n            username: \"\",\n            password: \"\",\n            remember: false,\n\n            // this prop checks if user clicked the fields. If false, don't run input validation\n            touched: {\n                username: false,\n                password: false,\n            }\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        // this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(values) {\n        this.toggleModal();\n    }\n\n    render() {\n\n        return(\n            <React.Fragment>\n                <Navbar light sticky=\"top\" expand=\"md\" className=\"bg-dark\">\n                    <div className=\"container-fluid\">\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src={baseUrl + 'images/logoipsum-logo.svg'} alt=\"Logo\"/>\n                        </NavbarBrand>\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link text-muted\" to=\"/home\"> Home</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link text-muted\" to=\"/loading\"> About Us</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link text-muted\" to=\"/search-results\"> Explore</NavLink>\n                            </NavItem>\n                        </Nav>\n                        <span className=\"navbar-text\">\n                            <Button outline onClick={this.toggleModal}>\n                                <i className=\"fa fa-sign-in fa-lg\" /> Login\n                            </Button>\n                        </span>\n                        </Collapse>\n                    </div>\n                </Navbar>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <div>\n                            <LocalForm onSubmit={this.handleLogin}>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"username\">Username</Label>\n                                    <Control.text model=\".username\" id=\"username\" name=\"username\" \n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".username\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"password\">Password</Label>\n                                    <Control.text model=\".password\" id=\"password\" name=\"password\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(6),\n                                            maxLength: maxLength(21)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".password\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 6 characters',\n                                            maxLength: 'Must be 21 characters or less'\n                                        }}\n                                    />\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".remember\" name=\"remember\" />\n                                            Remember Me\n                                        </Label>\n                                    </div>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Button onClick={this.props.onClick} type=\"submit\" color=\"primary\">Login</Button>\n                                </Row>\n                            </LocalForm>\n                        </div>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>            \n        );\n    }\n}\n\nexport default HeaderNoLogin;","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/HeaderComponent.js",["187"],"import React, { Component } from 'react';\nimport { Nav, NavbarToggler, Collapse, Navbar, NavItem, NavbarBrand, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl'\n\nclass Header extends Component {\n    constructor(props){\n        super(props);\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.state = {\n            isNavOpen: false\n        };\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <Navbar light sticky=\"top\" expand=\"md\" className=\"bg-dark\">\n                    <div className=\"container-fluid\">\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src={baseUrl + 'images/logoipsum-logo.svg'} alt=\"Logo\"/> \n                        </NavbarBrand>\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link text-muted\" to=\"/home\"> Home</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link text-muted\" to=\"/directory\"> Explore</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link text-muted\" to=\"/create-a-project\"> Create a Project</NavLink>\n                                </NavItem>\n                                <UncontrolledDropdown nav inNavbar>\n                                    <DropdownToggle nav caret>\n                                        <img src=\"/assets/images/mike.jpg\" width=\"30\" className=\"rounded-circle\" /> <Badge color=\"success\">4</Badge>\n                                    </DropdownToggle>\n                                    <DropdownMenu right>\n                                        <DropdownItem>\n                                            <NavLink className=\"nav-link text-muted\" to=\"/directory\"> Profile</NavLink>\n                                        </DropdownItem>\n                                        <DropdownItem>\n                                            <NavLink className=\"nav-link text-muted\" to=\"/directory\"> My Projects</NavLink>\n                                        </DropdownItem>\n                                        <DropdownItem>\n                                            <NavLink className=\"nav-link text-muted\" to=\"/directory\"> Messages <Badge color=\"success\">4</Badge></NavLink>\n                                        </DropdownItem>\n                                        <DropdownItem>\n                                            <NavLink className=\"nav-link text-muted\" to=\"/directory\"> Preferences</NavLink>\n                                        </DropdownItem>\n                                        <DropdownItem divider />\n                                        <DropdownItem>\n                                            <NavLink className=\"nav-link text-muted\" to=\"/directory\"> Log Out</NavLink>\n                                        </DropdownItem>\n                                    </DropdownMenu>\n                                </UncontrolledDropdown>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;\n","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/SearchHomeComponentBJ.js",["188","189"],"import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Input, Label, Badge, Container, Row, Col } from 'reactstrap';\nimport { Link } from 'react-router-dom'\n\nclass SearchHomeBJ extends Component {\n    \n    render() {\n\n        const breakpoint = \"\\u003C\\u002F\\u003E\"\n\n        return(\n            <React.Fragment>\n                <Container className=\"searchContainer\" fluid>\n                    <Row className=\"searchRowTitle\">\n                        <Col className=\"mr-5\">\n                            <h1 className=\"searchHeaderTitle\">What do you want to build?</h1>\n                        <Form action=\"/search-results\" method=\"get\">\n                            <div className=\"mb-3\">\n                                <Input \n                                    type=\"text\" \n                                    placeholder=\"Search\" \n                                    id=\"project-search\" \n                                    name=\"s\"\n                                /> \n                            </div>\n                            <div>\n                                <Button color=\"primary\" type=\"submit\" block>Search</Button>\n                            </div>\n                        </Form>\n                        </Col>\n                        <Col className=\"ml-5\">\n                            <h1 className=\"searchHeaderTitle\">Explore a topic</h1>\n                            <Row className=\"searchRowPill\">\n                                <Col className=\"mb-3\">\n                                    <Link to='search-results?s=&c=automation'>\n                                        <Badge className=\"searchPill\" pill color=\"primary\">Automation</Badge>\n                                    </Link>\n                                </Col>\n                                <Col className=\"mb-3\">\n                                    <Link to='search-results?s=&c=crypto'>\n                                        <Badge className=\"searchPill\" pill color=\"primary\">Crypto</Badge>\n                                    </Link>\n                                </Col>\n                                <Col className=\"mb-3\">\n                                    <Link to='search-results?s=&c=data'>\n                                        <Badge className=\"searchPill\" pill color=\"primary\">Data</Badge>\n                                    </Link>\n                                </Col>\n                                <Col className=\"mb-3\">\n                                    <Link to='search-results?s=&c=game'>\n                                        <Badge className=\"searchPill\" pill color=\"primary\">Game</Badge>\n                                    </Link>\n                                </Col>\n                                <Col className=\"mb-3\">\n                                    <Link to='search-results?s=&c=web+design'>\n                                        <Badge className=\"searchPill\" pill color=\"primary\">Web Design</Badge>\n                                    </Link>\n                                </Col>\n                                <Col className=\"mb-3\">\n                                    <Link to='search-results?s=&c=Other'>\n                                        <Badge className=\"searchPill\" pill color=\"primary\">Other</Badge>\n                                    </Link>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    <Row className=\"breakpoint\">\n                        <h1>{breakpoint}</h1>\n                    </Row>\n                </Container>\n\n            </React.Fragment>\n        )\n    }\n}\n\nexport default SearchHomeBJ","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/JoinCreateComponent.js",[],"/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/SearchFilterComponent.js",["190","191","192"],"import React, { Component } from 'react';\nimport { Input, Label, \n    Container, Row, Col,\n    Navbar, Nav, NavItem, NavbarToggler, Collapse } from 'reactstrap';\nimport { Link } from 'react-router-dom'\n\nclass SearchFilter extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isNavOpen: false\n        }\n\n        this.toggleNav = this.toggleNav.bind(this);\n    }\n\n    // This function will toggle isNavOpen to the opposite of it's value when called\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    render() {\n        return(\n            <Navbar light expand=\"lg\">\n                <Container className={this.props.class}>\n                    <Row className=\"mb-4 search-filters\">\n                        <NavbarToggler onClick={this.toggleNav} className=\"search-filter-toggler\" />\n                        <Collapse isOpen={this.state.isNavOpen} navbar className=\"filter-align-top\">\n                            <Col className=\"mb-4\">\n                                <Label htmlFor=\"projCategory\">Category</Label>\n                                <Input type=\"select\" name=\"projCategory\" id=\"projCategory\">\n                                    <option value=\"Automation\">Automation</option>\n                                    <option value=\"Crypto\">Crypto</option>\n                                    <option value=\"Data\">Data</option>\n                                    <option value=\"Game\">Game</option>\n                                    <option value=\"Web Design\">Web Design</option>\n                                    <option value=\"Other\">Other</option>\n                                </Input>\n                            </Col>\n                            <Col className=\"mb-4\">\n                                <Label htmlFor=\"languages\">Languages</Label>\n                                <Input type=\"select\" name=\"languages\" id=\"languages\" multiple>\n                                    <option value=\"1\">HTML</option>\n                                    <option value=\"2\">CSS</option>\n                                    <option value=\"3\">JS</option>\n                                    <option value=\"4\">Python</option>\n                                    <option value=\"5\">C</option>\n                                    <option value=\"6\">C#</option>\n                                    <option value=\"6\">C++</option>\n                                </Input>\n                            </Col>\n                            <Col className=\"mb-4\">\n                                <Label htmlFor=\"yearsOfExp\">Years of Exp</Label>\n                                <Input type=\"select\" name=\"yearsOfExp\" id=\"yearsOfExp\">\n                                    <option value=\"1\">&lt;1 year</option>\n                                    <option value=\"2\">1-3 years</option>\n                                    <option value=\"3\">3-5 years</option>\n                                    <option value=\"4\">5-10 years</option>\n                                    <option value=\"5\">10+ years</option>\n                                </Input>\n                            </Col>\n                            <Col>\n                                <Label htmlFor=\"timeCommit\">Weekly Time Commit</Label>\n                                <Input type=\"select\" name=\"timeCommit\" id=\"timeCommit\">\n                                    <option value=\"1\">&lt;5 hours</option>\n                                    <option value=\"2\">5-10 hours</option>\n                                    <option value=\"3\">10-20 hours</option>\n                                    <option value=\"4\">20-40 hours</option>\n                                    <option value=\"5\">40+ hours</option>\n                                </Input>\n                            </Col>\n                        </Collapse>\n                    </Row>\n                </Container>  \n            </Navbar>\n        );\n    }\n}\n\nexport default SearchFilter;","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/LoadingComponent.js",[],"/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/SearchHomeComponent.js",["193","194"],"import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Input, Label, Badge, Container, Row, Col } from 'reactstrap';\nimport { Link } from 'react-router-dom'\n\nclass SearchHome extends Component {\n    \n    render() {\n        return(\n            <React.Fragment>\n                <Container className={this.props.class}>\n                <Form action=\"/search-results\" method=\"get\">\n                    <Row>\n                        <h2>What do you want to build?</h2>\n                    </Row>\n                    <Row className=\"mb-2\"> \n                        <Col xs={this.props.colSpan}>\n                            <Input \n                                type=\"text\" \n                                placeholder=\"Search\" \n                                id=\"project-search\" \n                                name=\"s\"/>     \n                        </Col>\n                        <Col>\n                            <Link to='search-results?s=&c=automation'><Badge pill bg=\"primary\">Automation</Badge></Link>\n                            <Link to='search-results?s=&c=crypto'><Badge pill bg=\"primary\">Crypto</Badge></Link>\n                            <Link to='search-results?s=&c=data'><Badge pill bg=\"primary\">Data</Badge></Link>\n                            <Link to='search-results?s=&c=game'><Badge pill bg=\"primary\">Game</Badge></Link>\n                            <Link to='search-results?s=&c=web+design'><Badge pill bg=\"primary\">Web Design</Badge></Link>\n                            <Link to='search-results?s=&c=Other'><Badge pill bg=\"primary\">Other</Badge></Link>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Button type=\"submit\" className=\"btn btn-primary\">Search</Button>\n                        </Col>\n                    </Row>\n                </Form>\n                </Container>\n\n            </React.Fragment>\n        )\n    }\n}\n\nexport default SearchHome","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/redux/ActionTypes.js",[],"/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/FeaturedProjectsComponent.js",["195","196","197"],"import React, { Component } from 'react';\nimport { Container, Row, Col, Badge } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { PROJECTS } from '../shared/projects';\nimport { style } from '@mui/system';\n\n\nclass FeaturedProjects extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            projects: PROJECTS\n        }\n    }\n\n    render() {\n\n        const breakpoint = \"\\u003C\\u002F\\u003E\"\n        \n        const arrFeatured = this.state.projects.filter(project => project.featured);\n\n        const featuredProject = arrFeatured.map(project => {\n            return (\n                <Col key={project.id}>\n                    <Link to={`/projects/${project.id}`}>\n                        <div>\n                            <img\n                                src={project.img}\n                                className=\"featuredImg\"\n                            />\n                        </div>\n                        <div>\n                            <h5 className=\"featuredHeaderProj\">{project.title}</h5>\n                        </div>\n                        <Row className=\"featuredRowLang\">\n                            {project.languages.map(language => {\n                                return (\n                                    <Col className=\"featuredColLang\" xs=\"auto\">\n                                        <Badge pill>{language}</Badge>\n                                    </Col>\n                                )\n                            })}\n                        </Row>\n                    </Link>\n                </Col>\n            )\n        });\n\n        return (\n            <Container fluid className=\"featuredContainer\">\n                <Row className=\"featuredRowTitle\">\n                    <Col>\n                        <h1 className=\"featuredHeaderTitle\">Featured Projects</h1>\n                    </Col> \n                    <Col style={{textAlign: \"right\"}}>\n                        <h5><a href=\"/search-results?s=\">Explore More Projects</a></h5>\n                    </Col>\n                </Row>\n                <Row className=\"featuredRowProj\">\n                    {featuredProject}\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default FeaturedProjects;","/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/shared/baseUrl.js",[],"/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/shared/projects.js",[],{"ruleId":"198","severity":1,"message":"199","line":6,"column":8,"nodeType":"200","messageId":"201","endLine":6,"endColumn":14},{"ruleId":"198","severity":1,"message":"202","line":10,"column":25,"nodeType":"200","messageId":"201","endLine":10,"endColumn":33},{"ruleId":"198","severity":1,"message":"203","line":14,"column":10,"nodeType":"200","messageId":"201","endLine":14,"endColumn":17},{"ruleId":"198","severity":1,"message":"204","line":15,"column":50,"nodeType":"200","messageId":"201","endLine":15,"endColumn":58},{"ruleId":"205","severity":1,"message":"206","line":31,"column":5,"nodeType":"207","messageId":"208","endLine":37,"endColumn":6},{"ruleId":"198","severity":1,"message":"209","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":21},{"ruleId":"198","severity":1,"message":"210","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":26},{"ruleId":"198","severity":1,"message":"211","line":1,"column":28,"nodeType":"200","messageId":"201","endLine":1,"endColumn":36},{"ruleId":"198","severity":1,"message":"212","line":3,"column":8,"nodeType":"200","messageId":"201","endLine":3,"endColumn":20},{"ruleId":"198","severity":1,"message":"213","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":14},{"ruleId":"198","severity":1,"message":"214","line":4,"column":16,"nodeType":"200","messageId":"201","endLine":4,"endColumn":23},{"ruleId":"198","severity":1,"message":"215","line":4,"column":25,"nodeType":"200","messageId":"201","endLine":4,"endColumn":33},{"ruleId":"198","severity":1,"message":"216","line":4,"column":35,"nodeType":"200","messageId":"201","endLine":4,"endColumn":43},{"ruleId":"198","severity":1,"message":"217","line":4,"column":45,"nodeType":"200","messageId":"201","endLine":4,"endColumn":53},{"ruleId":"198","severity":1,"message":"218","line":4,"column":55,"nodeType":"200","messageId":"201","endLine":4,"endColumn":65},{"ruleId":"198","severity":1,"message":"219","line":4,"column":67,"nodeType":"200","messageId":"201","endLine":4,"endColumn":81},{"ruleId":"198","severity":1,"message":"220","line":4,"column":83,"nodeType":"200","messageId":"201","endLine":4,"endColumn":92},{"ruleId":"221","severity":1,"message":"222","line":23,"column":21,"nodeType":"223","endLine":26,"endColumn":23},{"ruleId":"198","severity":1,"message":"210","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":26},{"ruleId":"224","severity":1,"message":"225","line":21,"column":25,"nodeType":"223","messageId":"226","endLine":21,"endColumn":119,"fix":"227"},{"ruleId":"224","severity":1,"message":"225","line":22,"column":25,"nodeType":"223","messageId":"226","endLine":22,"endColumn":121,"fix":"228"},{"ruleId":"224","severity":1,"message":"225","line":23,"column":25,"nodeType":"223","messageId":"226","endLine":23,"endColumn":115,"fix":"229"},{"ruleId":"224","severity":1,"message":"225","line":24,"column":25,"nodeType":"223","messageId":"226","endLine":24,"endColumn":114,"fix":"230"},{"ruleId":"231","severity":1,"message":"232","line":27,"column":25,"nodeType":"223","endLine":27,"endColumn":55},{"ruleId":"221","severity":1,"message":"222","line":28,"column":29,"nodeType":"223","endLine":28,"endColumn":121},{"ruleId":"198","severity":1,"message":"213","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":14},{"ruleId":"198","severity":1,"message":"220","line":2,"column":16,"nodeType":"200","messageId":"201","endLine":2,"endColumn":25},{"ruleId":"198","severity":1,"message":"216","line":2,"column":27,"nodeType":"200","messageId":"201","endLine":2,"endColumn":35},{"ruleId":"198","severity":1,"message":"215","line":2,"column":37,"nodeType":"200","messageId":"201","endLine":2,"endColumn":45},{"ruleId":"198","severity":1,"message":"233","line":2,"column":47,"nodeType":"200","messageId":"201","endLine":2,"endColumn":53},{"ruleId":"198","severity":1,"message":"234","line":2,"column":55,"nodeType":"200","messageId":"201","endLine":2,"endColumn":59},{"ruleId":"198","severity":1,"message":"235","line":2,"column":61,"nodeType":"200","messageId":"201","endLine":2,"endColumn":70},{"ruleId":"198","severity":1,"message":"236","line":2,"column":79,"nodeType":"200","messageId":"201","endLine":2,"endColumn":84},{"ruleId":"198","severity":1,"message":"237","line":2,"column":110,"nodeType":"200","messageId":"201","endLine":2,"endColumn":117},{"ruleId":"198","severity":1,"message":"238","line":3,"column":10,"nodeType":"200","messageId":"201","endLine":3,"endColumn":14},{"ruleId":"198","severity":1,"message":"239","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":16},{"ruleId":"198","severity":1,"message":"240","line":6,"column":10,"nodeType":"200","messageId":"201","endLine":6,"endColumn":17},{"ruleId":"198","severity":1,"message":"241","line":6,"column":19,"nodeType":"200","messageId":"201","endLine":6,"endColumn":28},{"ruleId":"198","severity":1,"message":"242","line":6,"column":30,"nodeType":"200","messageId":"201","endLine":6,"endColumn":36},{"ruleId":"198","severity":1,"message":"243","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":19},{"ruleId":"198","severity":1,"message":"244","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":18},{"ruleId":"198","severity":1,"message":"245","line":7,"column":10,"nodeType":"200","messageId":"201","endLine":7,"endColumn":16},{"ruleId":"198","severity":1,"message":"246","line":7,"column":18,"nodeType":"200","messageId":"201","endLine":7,"endColumn":23},{"ruleId":"198","severity":1,"message":"202","line":7,"column":25,"nodeType":"200","messageId":"201","endLine":7,"endColumn":33},{"ruleId":"198","severity":1,"message":"247","line":7,"column":47,"nodeType":"200","messageId":"201","endLine":7,"endColumn":54},{"ruleId":"198","severity":1,"message":"248","line":11,"column":10,"nodeType":"200","messageId":"201","endLine":11,"endColumn":17},{"ruleId":"198","severity":1,"message":"249","line":12,"column":10,"nodeType":"200","messageId":"201","endLine":12,"endColumn":17},{"ruleId":"205","severity":1,"message":"206","line":16,"column":5,"nodeType":"207","messageId":"208","endLine":18,"endColumn":6},{"ruleId":"205","severity":1,"message":"206","line":8,"column":5,"nodeType":"207","messageId":"208","endLine":11,"endColumn":6},{"ruleId":"198","severity":1,"message":"239","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":16},{"ruleId":"198","severity":1,"message":"214","line":3,"column":16,"nodeType":"200","messageId":"201","endLine":3,"endColumn":23},{"ruleId":"198","severity":1,"message":"218","line":3,"column":45,"nodeType":"200","messageId":"201","endLine":3,"endColumn":55},{"ruleId":"198","severity":1,"message":"219","line":3,"column":57,"nodeType":"200","messageId":"201","endLine":3,"endColumn":71},{"ruleId":"205","severity":1,"message":"206","line":15,"column":5,"nodeType":"207","messageId":"208","endLine":17,"endColumn":6},{"ruleId":"231","severity":1,"message":"232","line":97,"column":41,"nodeType":"223","endLine":97,"endColumn":82},{"ruleId":"231","severity":1,"message":"232","line":123,"column":25,"nodeType":"223","endLine":123,"endColumn":66},{"ruleId":"198","severity":1,"message":"238","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":14},{"ruleId":"198","severity":1,"message":"250","line":4,"column":16,"nodeType":"200","messageId":"201","endLine":4,"endColumn":26},{"ruleId":"205","severity":1,"message":"206","line":8,"column":5,"nodeType":"207","messageId":"208","endLine":10,"endColumn":6},{"ruleId":"251","severity":1,"message":"252","line":94,"column":37,"nodeType":"223","messageId":"253","endLine":101,"endColumn":39},{"ruleId":"251","severity":1,"message":"252","line":116,"column":37,"nodeType":"223","messageId":"253","endLine":123,"endColumn":39},{"ruleId":"251","severity":1,"message":"254","line":139,"column":45,"nodeType":"223","messageId":"253","endLine":139,"endColumn":99},{"ruleId":"221","severity":1,"message":"222","line":44,"column":41,"nodeType":"223","endLine":44,"endColumn":116},{"ruleId":"198","severity":1,"message":"235","line":2,"column":24,"nodeType":"200","messageId":"201","endLine":2,"endColumn":33},{"ruleId":"198","severity":1,"message":"236","line":2,"column":42,"nodeType":"200","messageId":"201","endLine":2,"endColumn":47},{"ruleId":"198","severity":1,"message":"255","line":4,"column":13,"nodeType":"200","messageId":"201","endLine":4,"endColumn":16},{"ruleId":"198","severity":1,"message":"256","line":4,"column":18,"nodeType":"200","messageId":"201","endLine":4,"endColumn":25},{"ruleId":"198","severity":1,"message":"238","line":5,"column":10,"nodeType":"200","messageId":"201","endLine":5,"endColumn":14},{"ruleId":"198","severity":1,"message":"235","line":2,"column":24,"nodeType":"200","messageId":"201","endLine":2,"endColumn":33},{"ruleId":"198","severity":1,"message":"236","line":2,"column":42,"nodeType":"200","messageId":"201","endLine":2,"endColumn":47},{"ruleId":"198","severity":1,"message":"257","line":5,"column":10,"nodeType":"200","messageId":"201","endLine":5,"endColumn":15},{"ruleId":"198","severity":1,"message":"258","line":20,"column":15,"nodeType":"200","messageId":"201","endLine":20,"endColumn":25},{"ruleId":"221","severity":1,"message":"222","line":29,"column":29,"nodeType":"223","endLine":32,"endColumn":31},"no-unused-vars","'Search' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'actions' is defined but never used.","'joinTeam' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'createForms' is defined but never used.","'Component' is defined but never used.","'useState' is defined but never used.","'SearchFilter' is defined but never used.","'Card' is defined but never used.","'CardImg' is defined but never used.","'CardText' is defined but never used.","'CardBody' is defined but never used.","'CardDeck' is defined but never used.","'Breadcrumb' is defined but never used.","'BreadcrumbItem' is defined but never used.","'CardTitle' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"259","text":"260"},{"range":"261","text":"260"},{"range":"262","text":"260"},{"range":"263","text":"260"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Button' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Tooltip' is defined but never used.","'Link' is defined but never used.","'render' is defined but never used.","'Control' is defined but never used.","'LocalForm' is defined but never used.","'Errors' is defined but never used.","'Jumbotron' is defined but never used.","'SearchHome' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'NavLink' is defined but never used.","'Loading' is defined but never used.","'baseUrl' is defined but never used.","'useHistory' is defined but never used.","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","'Nav' is defined but never used.","'NavItem' is defined but never used.","'style' is defined but never used.","'breakpoint' is assigned a value but never used.",[1020,1020]," rel=\"noreferrer\"",[1183,1183],[1339,1339],[1493,1493]]