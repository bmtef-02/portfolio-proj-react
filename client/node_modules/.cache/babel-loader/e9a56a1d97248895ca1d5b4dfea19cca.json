{"ast":null,"code":"var _jsxFileName = \"/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/src/components/MainComponent.js\";\nimport React, { Component } from 'react';\nimport HeaderConditional from './HeaderConditionalComponent';\nimport Home from './HomeComponent';\nimport SearchResult from './SearchResultComponent';\nimport Project from './ProjectComponent';\nimport Search from './SearchComponent';\nimport Footer from './FooterComponent';\nimport Create from './CreateComponent'; // import Create from './CreateComponentMUI';\n\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'; // import { PROJECTS } from '../shared/projects';\n// import { USERS } from '../shared/users'\n\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\nimport { fetchProjects, fetchUsers, postProject } from '../redux/ActionCreators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.projects,\n    users: state.users\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchProjects: () => fetchProjects(),\n  fetchUsers: () => fetchUsers(),\n  postProject: (title, category, teamSize, description, languages, yearsOfExp, time, owner_id, team_id) => postProject(title, category, teamSize, description, languages, yearsOfExp, time, owner_id, team_id)\n};\n\nclass Main extends Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //     projects: PROJECTS,\n    //     users: USERS\n    // };\n  }\n\n  componentDidMount() {\n    this.props.fetchProjects();\n    this.props.fetchUsers();\n  }\n\n  render() {\n    const ProjectWithId = ({\n      match\n    }) => {\n      return /*#__PURE__*/_jsxDEV(Project, {\n        project: this.props.projects.projects.filter(project => project.id === +match.params.projectId)[0],\n        users: this.props.users.users,\n        isLoadingProjects: this.props.projects.isLoading,\n        isLoadingUsers: this.props.users.isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [console.log(\"Here are all the projects: \" + this.props.projects), /*#__PURE__*/_jsxDEV(HeaderConditional, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(Home, {\n            projects: this.props.projects,\n            projectsLoading: this.props.projects.isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/home\",\n          render: () => /*#__PURE__*/_jsxDEV(Home, {\n            projects: this.props.projects,\n            projectsLoading: this.props.projects.isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/search-results\",\n          render: () => /*#__PURE__*/_jsxDEV(SearchResult, {\n            projects: this.props.projects.projects,\n            projectsLoading: this.props.projects.isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/projects/:projectId\",\n          component: ProjectWithId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/create-a-project\",\n          render: () => /*#__PURE__*/_jsxDEV(Create, {\n            postProject: this.props.postProject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","map":{"version":3,"sources":["/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/src/components/MainComponent.js"],"names":["React","Component","HeaderConditional","Home","SearchResult","Project","Search","Footer","Create","Switch","Route","Redirect","withRouter","connect","actions","fetchProjects","fetchUsers","postProject","mapStateToProps","state","projects","users","mapDispatchToProps","title","category","teamSize","description","languages","yearsOfExp","time","owner_id","team_id","Main","constructor","props","componentDidMount","render","ProjectWithId","match","filter","project","id","params","projectId","isLoading","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport HeaderConditional from './HeaderConditionalComponent';\nimport Home from './HomeComponent';\nimport SearchResult from './SearchResultComponent';\nimport Project from './ProjectComponent';\nimport Search from './SearchComponent';\nimport Footer from './FooterComponent';\nimport Create from './CreateComponent';\n// import Create from './CreateComponentMUI';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\n// import { PROJECTS } from '../shared/projects';\n// import { USERS } from '../shared/users'\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\nimport { fetchProjects, fetchUsers, postProject } from '../redux/ActionCreators';\n\nconst mapStateToProps = state => {\n    return {\n        projects: state.projects,\n        users: state.users\n    };\n};\n\nconst mapDispatchToProps = {\n    fetchProjects: () => (fetchProjects()),\n    fetchUsers: () => (fetchUsers()),\n    postProject: (title, category, teamSize, description, languages, yearsOfExp, time, owner_id, team_id) => (postProject(title, category, teamSize, description, languages, yearsOfExp, time, owner_id, team_id))\n};\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        // this.state = {\n        //     projects: PROJECTS,\n        //     users: USERS\n        // };\n    }\n\n    componentDidMount() {\n        this.props.fetchProjects();\n        this.props.fetchUsers();\n    }\n\n    render() {\n        const ProjectWithId = ({match}) => {\n            return(\n                <Project \n                project={this.props.projects.projects.filter(project => project.id === +match.params.projectId)[0]}\n                users={this.props.users.users}\n                isLoadingProjects={this.props.projects.isLoading}\n                isLoadingUsers={this.props.users.isLoading}\n                />\n                \n            )\n        }\n        return(\n            <React.Fragment>\n                {console.log(\"Here are all the projects: \" + this.props.projects)}\n                <HeaderConditional />\n                <Switch>\n                    <Route exact path='/' render={() =>\n                            <Home \n                                projects={this.props.projects}\n                                projectsLoading={this.props.projects.isLoading}\n                            />\n                        } />\n                    <Route exact path='/home' render={() =>\n                            <Home \n                                projects={this.props.projects}\n                                projectsLoading={this.props.projects.isLoading}\n                            />\n                        } />\n                    <Route path='/search-results' render={() => <SearchResult projects={this.props.projects.projects} projectsLoading={this.props.projects.isLoading} />} />\n                    <Route path='/projects/:projectId' component={ProjectWithId} />\n                    <Route path='/create-a-project' render={() => <Create postProject={this.props.postProject} />} />\n                </Switch>\n                <Footer />\n            </React.Fragment>\n\n        \n        );\n\n\n\n    };\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));"]},"metadata":{},"sourceType":"module"}