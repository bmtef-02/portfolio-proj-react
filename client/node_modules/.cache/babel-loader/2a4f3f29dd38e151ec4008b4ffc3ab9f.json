{"ast":null,"code":"var _jsxFileName = \"/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/HeaderNoLoginComponent.js\";\nimport React, { Component } from 'react';\nimport { Nav, NavbarToggler, Collapse, Navbar, NavItem, NavbarBrand, Button, Label, Row, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { NavLink } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => val && val.length >= len;\n\nclass HeaderNoLogin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      // these props correspond to the login modal inputs\n      username: \"\",\n      password: \"\",\n      remember: false,\n      // this prop checks if user clicked the fields. If false, don't run input validation\n      touched: {\n        username: false,\n        password: false\n      }\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.toggleModal = this.toggleModal.bind(this); // this.handleInputChange = this.handleInputChange.bind(this);\n\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleLogin(values) {\n    this.toggleModal();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        light: true,\n        sticky: \"top\",\n        expand: \"md\",\n        className: \"bg-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: [/*#__PURE__*/_jsxDEV(NavbarBrand, {\n            className: \"mr-auto\",\n            href: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: baseUrl + 'images/logoipsum-logo.svg',\n              alt: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavbarToggler, {\n            onClick: this.toggleNav\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            isOpen: this.state.isNavOpen,\n            navbar: true,\n            children: [/*#__PURE__*/_jsxDEV(Nav, {\n              className: \"ml-auto\",\n              navbar: true,\n              children: [/*#__PURE__*/_jsxDEV(NavItem, {\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  className: \"nav-link text-muted\",\n                  to: \"/home\",\n                  children: \" Home\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  className: \"nav-link text-muted\",\n                  to: \"/loading\",\n                  children: \" About Us\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  className: \"nav-link text-muted\",\n                  to: \"/search-results\",\n                  children: \" Explore\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"navbar-text\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                outline: true,\n                onClick: this.toggleModal,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-sign-in fa-lg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 33\n                }, this), \" Login\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.isModalOpen,\n        toggle: this.toggleModal,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggleModal,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(LocalForm, {\n              onSubmit: this.handleLogin,\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"username\",\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Control.text, {\n                  model: \".username\",\n                  id: \"username\",\n                  name: \"username\",\n                  className: \"form-control\",\n                  validators: {\n                    required,\n                    minLength: minLength(2),\n                    maxLength: maxLength(15)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                  className: \"text-danger\",\n                  model: \".username\",\n                  show: \"touched\",\n                  component: \"div\",\n                  messages: {\n                    required: 'Required',\n                    minLength: 'Must be at least 2 characters',\n                    maxLength: 'Must be 15 characters or less'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Control.text, {\n                  model: \".password\",\n                  id: \"password\",\n                  name: \"password\",\n                  className: \"form-control\",\n                  validators: {\n                    required,\n                    minLength: minLength(6),\n                    maxLength: maxLength(21)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                  className: \"text-danger\",\n                  model: \".password\",\n                  show: \"touched\",\n                  component: \"div\",\n                  messages: {\n                    required: 'Required',\n                    minLength: 'Must be at least 6 characters',\n                    maxLength: 'Must be 21 characters or less'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-check\",\n                  children: /*#__PURE__*/_jsxDEV(Label, {\n                    check: true,\n                    children: [/*#__PURE__*/_jsxDEV(Control.checkbox, {\n                      model: \".remember\",\n                      name: \"remember\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 45\n                    }, this), \"Remember Me\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: this.props.onClick,\n                  type: \"submit\",\n                  color: \"primary\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default HeaderNoLogin;","map":{"version":3,"sources":["/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/client/src/components/HeaderNoLoginComponent.js"],"names":["React","Component","Nav","NavbarToggler","Collapse","Navbar","NavItem","NavbarBrand","Button","Label","Row","Modal","ModalHeader","ModalBody","Control","LocalForm","Errors","NavLink","baseUrl","required","val","length","maxLength","len","minLength","HeaderNoLogin","constructor","props","state","isNavOpen","isModalOpen","username","password","remember","touched","toggleNav","bind","toggleModal","handleLogin","setState","values","render","onClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Nav, NavbarToggler, Collapse, Navbar, NavItem, NavbarBrand, \n    Button, Label, Row,\n    Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { NavLink } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\n\nclass HeaderNoLogin extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false,\n\n            // these props correspond to the login modal inputs\n            username: \"\",\n            password: \"\",\n            remember: false,\n\n            // this prop checks if user clicked the fields. If false, don't run input validation\n            touched: {\n                username: false,\n                password: false,\n            }\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        // this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(values) {\n        this.toggleModal();\n    }\n\n    render() {\n\n        return(\n            <React.Fragment>\n                <Navbar light sticky=\"top\" expand=\"md\" className=\"bg-dark\">\n                    <div className=\"container-fluid\">\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src={baseUrl + 'images/logoipsum-logo.svg'} alt=\"Logo\"/>\n                        </NavbarBrand>\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link text-muted\" to=\"/home\"> Home</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link text-muted\" to=\"/loading\"> About Us</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link text-muted\" to=\"/search-results\"> Explore</NavLink>\n                            </NavItem>\n                        </Nav>\n                        <span className=\"navbar-text\">\n                            <Button outline onClick={this.toggleModal}>\n                                <i className=\"fa fa-sign-in fa-lg\" /> Login\n                            </Button>\n                        </span>\n                        </Collapse>\n                    </div>\n                </Navbar>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <div>\n                            <LocalForm onSubmit={this.handleLogin}>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"username\">Username</Label>\n                                    <Control.text model=\".username\" id=\"username\" name=\"username\" \n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".username\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"password\">Password</Label>\n                                    <Control.text model=\".password\" id=\"password\" name=\"password\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(6),\n                                            maxLength: maxLength(21)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".password\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 6 characters',\n                                            maxLength: 'Must be 21 characters or less'\n                                        }}\n                                    />\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".remember\" name=\"remember\" />\n                                            Remember Me\n                                        </Label>\n                                    </div>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Button onClick={this.props.onClick} type=\"submit\" color=\"primary\">Login</Button>\n                                </Row>\n                            </LocalForm>\n                        </div>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>            \n        );\n    }\n}\n\nexport default HeaderNoLogin;"]},"metadata":{},"sourceType":"module"}