{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Projects = (state = {\n  isLoading: true,\n  errMess: null,\n  projects: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_PROJECTS:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        projects: action.payload\n      };\n\n    case ActionTypes.PROJECTS_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        projects: []\n      };\n\n    case ActionTypes.PROJECTS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload\n      };\n\n    case ActionTypes.ADD_PROJECT:\n      const project = action.payload;\n      return { ...state,\n        projects: state.projects.concat(project)\n      };\n\n    default:\n      return state;\n  }\n};\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/mikerchen/Documents/Nucamp/portfolio-project/portfolio-proj-react/src/redux/projects.js"],"names":["ActionTypes","Projects","state","isLoading","errMess","projects","action","type","ADD_PROJECTS","payload","PROJECTS_LOADING","PROJECTS_FAILED","ADD_PROJECT","project","concat"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,IAAb;AAAmBC,EAAAA,OAAO,EAAE,IAA5B;AAAkCC,EAAAA,QAAQ,EAAE;AAA5C,CAAT,EAA2DC,MAA3D,KAAsE;AAC1F,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAW,CAACQ,YAAjB;AACI,aAAO,EAAC,GAAGN,KAAJ;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CC,QAAAA,QAAQ,EAAEC,MAAM,CAACG;AAA7D,OAAP;;AACJ,SAAKT,WAAW,CAACU,gBAAjB;AACA,aAAO,EAAC,GAAGR,KAAJ;AAAWC,QAAAA,SAAS,EAAE,IAAtB;AAA4BC,QAAAA,OAAO,EAAE,IAArC;AAA2CC,QAAAA,QAAQ,EAAE;AAArD,OAAP;;AACA,SAAKL,WAAW,CAACW,eAAjB;AACI,aAAO,EAAC,GAAGT,KAAJ;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAEE,MAAM,CAACG;AAA7C,OAAP;;AACJ,SAAKT,WAAW,CAACY,WAAjB;AACI,YAAMC,OAAO,GAAGP,MAAM,CAACG,OAAvB;AACA,aAAO,EAAC,GAAGP,KAAJ;AAAWG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeS,MAAf,CAAsBD,OAAtB;AAArB,OAAP;;AACJ;AACI,aAAOX,KAAP;AAXR;AAaH,CAdM;KAAMD,Q","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\nexport const Projects = (state = { isLoading: true, errMess: null, projects: [] }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROJECTS:\n            return {...state, isLoading: false, errMess: null, projects: action.payload};\n        case ActionTypes.PROJECTS_LOADING:\n        return {...state, isLoading: true, errMess: null, projects: []};\n        case ActionTypes.PROJECTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n        case ActionTypes.ADD_PROJECT:\n            const project = action.payload;\n            return {...state, projects: state.projects.concat(project)};\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}